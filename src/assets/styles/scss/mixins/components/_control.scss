/*--------------------------------------/
 Settings
--------------------------------------*/

$control: (
    color: $input-color,
    bg-color: $input-bg,
    font-family: $input-font-family,
    height: $input-height,
    padding-x: $input-padding-x,
    padding-y: $input-padding-y,
    font-size: $input-font-size,
    font-weight: $input-font-weight,
    line-height: $input-line-height,
    box-shadow: $input-box-shadow,
    border-width: $input-border-width,
    border-color: $input-border-color,
    border-radius: $input-border-radius,
    transition: $input-transition,
    placeholder-color: $input-placeholder-color,
    disabled-bg: $input-disabled-bg,
    focus-color: $input-focus-color,
    focus-bg: $input-focus-bg,
    focus-border-color: $input-focus-border-color,
    focus-box-shadow: $input-focus-box-shadow,
);

@mixin create-control($control: $control) {
    display: block;
    width: 100%;
    max-width: 100%;
    height: map-get($control, 'height');
    padding: map-get($control, 'padding-y') map-get($control, 'padding-x');
    font-family: map-get($control, 'font-family');
    @include font-size(map-get($control, 'font-size'));
    font-weight: map-get($control, 'font-weight');
    line-height: map-get($control, 'line-height');
    color: map-get($control, 'color');
    background-color: map-get($control, 'bg');
    background-clip: padding-box;
    border: map-get($control, 'border-width') solid map-get($control, 'border-color');

    // Note: This has no effect on <select>s in some browsers, due to the limited stylability of `<select>`s in CSS.
    @include border-radius(map-get($control, 'border-radius'), 0);

    @include box-shadow(map-get($control, 'box-shadow'));
    @include transition(map-get($control, 'transition'));

    // Unstyle the caret on `<select>`s in IE10+.
    &::-ms-expand {
        background-color: transparent;
        border: 0;
    }

    // Customize the `:focus` state to imitate native WebKit styles.
    &:focus {
        color: map-get($control, 'focus-color');
        background-color: map-get($control, 'focus-bg');
        border-color: map-get($control, 'focus-border-color');
        outline: 0;
        // Avoid using mixin so we can pass custom focus shadow properly
        @if $enable-shadows {
            box-shadow: map-get($control, 'box-shadow'), map-get($control, 'focus-box-shadow');
        } @else {
            box-shadow: map-get($control, 'focus-box-shadow');
        }
    }

    // Placeholder
    @include placeholder {
        color: map-get($control, 'placeholder-color');
        // Override Firefox's unusual default opacity; see https://github.com/twbs/bootstrap/pull/11526.
        opacity: 1;
    }

    // Disabled and read-only inputs
    //
    // HTML5 says that controls under a fieldset > legend:first-child won't be
    // disabled if the fieldset is disabled. Due to implementation difficulty, we
    // don't honor that edge case; we style them as disabled anyway.
    &:disabled,
    &.-disabled,
    &[readonly] {
        background-color: map-get($control, 'disabled-bg');
        // iOS fix for unreadable disabled content; see https://github.com/twbs/bootstrap/issues/11655.
        opacity: 1;
        cursor: default;
    }

    &.-round{
        border-radius: map-get($control, 'font-size') * 2;
    }

    &.-square{
        border-radius: 0;
    }
}
